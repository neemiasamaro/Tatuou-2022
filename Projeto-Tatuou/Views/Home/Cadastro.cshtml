@model WebApplication1.Models.Cadastro

@{
    ViewBag.Title = "Cadastro";
}

<section class="section cta dark">
    <div class="container" style="margin-top:3rem;">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-sm-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <h3 class="mb-5 text-center display-4"><strong>Cadastro</strong></h3>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="form-outline col-md-12 mb-3">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control w-100 mt-1" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-4 col-sm-12 mb-3">
                                @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control w-100 mt-1 ", @id = "cpf" } })
                                @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-8 col-sm-12 mb-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control w-100 mt-1" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-6 col-sm-12 mb-3">
                                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control w-100 mt-1", @id = "password" } })
                                @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-6 col-sm-12 mb-3">
                                @Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control w-100 mt-1", @id = "cpassword" } })
                                @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline mb-2 col-md-12 text-left">
                                <label for="show" name="mostraSenha"><input type="checkbox" id="show" class="mx-2" />Mostrar Senha</label>
                            </div>
                            <div class="col-md-12">
                                <h6 class="text-white m-0">
                                    * OBS: A senha deve conter aos menos uma letra maiúscula, minúscula e um número e deve ter no mínimo 8 caracteres
                                </h6>
                            </div>
                            <div class="col-md-12">
                                <input type="submit" value="Cadastrar-se" class="btn btn-block" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
