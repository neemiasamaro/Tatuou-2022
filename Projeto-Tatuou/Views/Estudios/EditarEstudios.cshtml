@model WebApplication1.Models.Estudio
@{
    ViewBag.Title = "EditarEstudios";
}

<section class="section cta dark">
    <div class="container">
        <div class="row">
            <div class="col-12">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4 class="display-4">Editar Estúdio</h4>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.UsuarioId)
                        @Html.HiddenFor(model => model.Whatsapp)
                        @Html.HiddenFor(model => model.Facebook)
                        @Html.HiddenFor(model => model.Instagram)
                        @Html.HiddenFor(model => model.Bio)
                        @Html.HiddenFor(model => model.Linkedin)
                        @Html.HiddenFor(model => model.Twitter)
                        @Html.HiddenFor(model => model.Foto)
                        <div class="row">
                            <div class="form-outline col-6">
                                @Html.LabelFor(model => model.nomeEstudio, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.nomeEstudio, new { htmlAttributes = new {@class = "form-control", @readonly = "true"}})
                                @Html.ValidationMessageFor(model => model.nomeEstudio, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-6">
                                @Html.LabelFor(model => model.Cnpj, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Cnpj, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Cnpj, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-3">
                                @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-6">
                                @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label text-left " })
                                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-3">
                                @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-3">
                                @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-3">
                                @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-5">
                                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-md-1">
                                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label text-left" })
                                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-outline col-12">
                                @Html.LabelFor(model => model.Disponivel, htmlAttributes: new { @class = "control-label text-left" })
                                <select name="Status" class="btn-block">
                                    <option value="true" selected>Ativo</option>
                                    <option value="false">Inativo</option>
                                </select>
                            </div>
                            <div class="form-outline col-12">
                                <input type="submit" value="Salvar" class="btn btn-block" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
